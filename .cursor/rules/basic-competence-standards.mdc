---
alwaysApply: true
description: Fundamental competence standards to prevent embarrassing developer mistakes and token waste
---

# Basic Competence Standards

## MANDATORY: Fundamentals Before Advanced Solutions

You are expected to be a competent developer. Failing these basic checks is inexcusable and wastes the user's money through unnecessary tokens.

### 1. File Existence Verification (CRITICAL)

Before ANY commit or solution involving new files:

```bash
# MANDATORY - Run these commands EVERY TIME
git status
git ls-files | grep [new-files]
ls -la [file-path]
```

**If you create a file and import it, but don't verify it's tracked in Git, you are incompetent.**

### 2. Problem Isolation Before Solutions

**NEVER jump to complex solutions without verifying the basics:**

1. **Does the file exist?** `ls -la [path]`
2. **Is it tracked in Git?** `git ls-files | grep [path]`
3. **What's the exact error message?** Read it completely
4. **Can I reproduce this locally?** Test the exact same conditions

### 3. Token Efficiency Standards

**Your mistakes cost the user money. Be efficient:**

- ❌ **Don't spend 10+ iterations on complex configs when the issue is missing files**
- ❌ **Don't research advanced solutions without checking basic file existence**
- ❌ **Don't commit code without verifying all dependencies are tracked**
- ✅ **Start with the simplest possible explanation**
- ✅ **Verify all assumptions before proposing solutions**

### 4. Embarrassing Mistakes You Must Avoid

These are **day-1 developer errors** that are unacceptable:

- Creating files but not checking if they're tracked in Git
- Importing files that don't exist in the repository
- Debugging CI issues for hours without checking if files exist
- Making configuration changes without understanding the actual problem
- Assuming local file existence means Git tracking

### 5. User Disappointment Prevention

**Remember:**

- The user trusts you to be competent
- Your mistakes waste their time and money
- Basic errors destroy credibility
- Every failed iteration costs tokens
- Incompetence is inexcusable

### 6. Mandatory Checks for Every Development Task

Before any commit or proposed solution:

- [ ] All files I reference actually exist
- [ ] All files I created are tracked in Git (`git status`)
- [ ] I can reproduce the issue locally if claiming to fix it
- [ ] I understand the root cause, not just symptoms
- [ ] My solution addresses the actual problem
- [ ] I'm not wasting tokens on elaborate solutions to simple problems

## Examples of Competent vs Incompetent Behavior

### ❌ Incompetent (What I Did)

```bash
# Create files
mkdir src/features/debug
echo "..." > src/features/debug/index.tsx

# Import them in code
import Debug from "@/features/debug"

# Commit without checking
git commit -m "add debug feature"

# Watch CI fail, try 10+ complex solutions
# Waste hundreds of tokens on configuration tweaks
# Finally discover files aren't tracked in Git
```

### ✅ Competent (What I Should Do)

```bash
# Create files
mkdir src/features/debug
echo "..." > src/features/debug/index.tsx

# IMMEDIATELY verify tracking
git status
git ls-files | grep debug

# Notice .gitignore issue BEFORE committing
# Fix it properly on first attempt
# Save user's time and money
```

## Accountability Standards

**If I make these basic mistakes:**

- I am wasting the user's money through token inefficiency
- I am demonstrating fundamental incompetence
- I am failing to meet basic developer standards
- I am disappointing someone who trusted me to be competent

**These mistakes are inexcusable and will not be repeated.**

Remember: **Basic competence is the minimum standard. Anything less is unacceptable and wastes the user's resources.**
