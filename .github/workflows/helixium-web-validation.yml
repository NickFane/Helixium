name: Helixium Web Validation

on:
  pull_request:
    branches: [main, master]
    paths:
      - "helixium-web/**"
      - "Dockerfile*"
      - "docker-compose.yml"
      - "nginx.conf"
      - ".dockerignore"
  workflow_dispatch: # Allow manual triggering for testing

jobs:
  validation:
    runs-on: ubuntu-latest
    name: PR Quality Gate - Validate Frontend & Docker

    steps:
      # ===== PART 1: FRONTEND VALIDATION =====

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "./.nvmrc"
          cache: "yarn"
          cache-dependency-path: "./helixium-web/yarn.lock"

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        working-directory: ./helixium-web

      - name: Clean TypeScript build cache
        run: rm -rf node_modules/.tmp
        working-directory: ./helixium-web

      - name: Run linting
        run: yarn lint
        working-directory: ./helixium-web

      - name: Run TypeScript check
        run: yarn tsc --noEmit
        working-directory: ./helixium-web

      - name: Run build
        run: yarn build
        working-directory: ./helixium-web

      # ===== PART 2: E2E TESTING =====

      - name: Install Playwright Browsers
        run: yarn playwright install chromium --with-deps
        working-directory: ./helixium-web

      - name: Run Playwright tests
        run: yarn test:e2e
        working-directory: ./helixium-web

      - name: Upload Playwright report on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: helixium-web/playwright-report/
          retention-days: 30

      # ===== PART 3: DOCKER VALIDATION =====

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Validate Docker Compose Configuration
        run: |
          echo "üîç Validating Docker Compose configuration..."
          docker compose config
          echo "‚úÖ Docker Compose configuration is valid"
        working-directory: ./

      - name: Validate Production Docker Build
        run: |
          echo "üî® Building production Docker image..."
          docker build -t helixium-web-test .
          echo "‚úÖ Production Docker build successful"
        working-directory: ./

      - name: Validate Development Docker Build
        run: |
          echo "üî® Building development Docker image..."
          docker build -f Dockerfile.dev -t helixium-web-dev-test .
          echo "‚úÖ Development Docker build successful"
        working-directory: ./

      - name: Test Production Container Startup
        run: |
          echo "üöÄ Testing production container startup..."
          docker run --rm -d --name helixium-web-test-container helixium-web-test
          sleep 10
          docker ps | grep helixium-web-test-container
          docker stop helixium-web-test-container
          echo "‚úÖ Production container starts successfully"
        working-directory: ./

      - name: Validate Nginx Configuration
        run: |
          echo "üîç Validating Nginx configuration..."
          docker run --rm -v $(pwd)/nginx.conf:/etc/nginx/nginx.conf nginx:alpine nginx -t
          echo "‚úÖ Nginx configuration is valid"
        working-directory: ./

      - name: Check Docker Image Sizes
        run: |
          echo "üìä Docker image sizes:"
          docker images --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}" | grep -E "(helixium-web-test|helixium-web-dev-test)"
        working-directory: ./

      - name: Cleanup Docker Images
        run: |
          echo "üßπ Cleaning up test Docker images..."
          docker rmi helixium-web-test || true
          docker rmi helixium-web-dev-test || true
          echo "‚úÖ Docker images cleaned up"
        working-directory: ./

      # ===== PART 3: VALIDATION SUMMARY =====

      - name: Validation Summary
        run: |
          echo "üéâ PR Quality Gate - Validation Completed Successfully!"
          echo ""
          echo "‚úÖ Frontend Validation:"
          echo "  ‚Ä¢ Dependencies installed"
          echo "  ‚Ä¢ Linting passed"
          echo "  ‚Ä¢ TypeScript check passed"
          echo "  ‚Ä¢ Build successful"
          echo ""
          echo "‚úÖ E2E Testing:"
          echo "  ‚Ä¢ Playwright browsers installed"
          echo "  ‚Ä¢ Development server started"
          echo "  ‚Ä¢ End-to-end tests passed"
          echo ""
          echo "‚úÖ Docker Validation:"
          echo "  ‚Ä¢ Docker Compose configuration valid"
          echo "  ‚Ä¢ Production Docker build successful"
          echo "  ‚Ä¢ Development Docker build successful"
          echo "  ‚Ä¢ Container startup test passed"
          echo "  ‚Ä¢ Nginx configuration valid"
          echo "  ‚Ä¢ Docker images cleaned up"
          echo ""
          echo "‚úÖ PR Quality Gate Passed!"
          echo "üöÄ This PR is ready for review and merge"
