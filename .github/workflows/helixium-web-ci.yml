name: Helixium Web CI

on:
  pull_request:
    branches: [main, master]
    paths:
      - "helixium-web/**"
      - "Dockerfile*"
      - "docker-compose.yml"
      - "nginx.conf"
      - ".dockerignore"
  push:
    branches: [main, master]
    paths:
      - "helixium-web/**"
      - "Dockerfile*"
      - "docker-compose.yml"
      - "nginx.conf"
      - ".dockerignore"

jobs:
  test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./helixium-web

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "./.nvmrc"
          cache: "yarn"
          cache-dependency-path: "./helixium-web/yarn.lock"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run linting
        run: yarn lint

      - name: Run build
        run: yarn build

      # Docker Build Validation
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Validate Production Docker Build
        run: |
          echo "Building production Docker image..."
          docker build -t helixium-web-test .
          echo "✅ Production Docker build successful"
        working-directory: ./

      - name: Validate Development Docker Build
        run: |
          echo "Building development Docker image..."
          docker build -f Dockerfile.dev -t helixium-web-dev-test .
          echo "✅ Development Docker build successful"
        working-directory: ./

      - name: Validate Docker Compose Configuration
        run: |
          echo "Validating Docker Compose configuration..."
          docker compose config
          echo "✅ Docker Compose configuration is valid"
        working-directory: ./

      - name: Cleanup Docker Images
        run: |
          echo "Cleaning up test Docker images..."
          docker rmi helixium-web-test || true
          docker rmi helixium-web-dev-test || true
          echo "✅ Docker images cleaned up"
        working-directory: ./
